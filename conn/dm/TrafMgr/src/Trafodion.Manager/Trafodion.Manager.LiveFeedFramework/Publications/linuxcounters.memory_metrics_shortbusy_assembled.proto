// @@@ START COPYRIGHT @@@
//
// (C) Copyright 2015 Hewlett-Packard Development Company, L.P.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
// @@@ END COPYRIGHT @@@

import "common.info_header.proto";

package linuxcounters;
//!!BLOCK:HEADER=BEGIN
//!!BLOCK:PUBLICATION DESCRIPTION=BEGIN
// High-freq Assembled Message for the memory_metrics publication
//
//  This publication is sent by the provider (node level provider or UNA) once every two seconds.
// 
//  This data is collected from /proc/meminfo. In a later release, it might be provided 
//     by the monitor. This data is not provided for spare nodes.
//	
//  The values supplied reflect the memory and swap utilization for this node.  Memory is shared
//     among cores. The values supplied are snapshot percentages, calculated at the time
//     the publication is generated. If the data in /proc/meminfo is invalid, a 0 is returned.
//
//  The raw data for this publication is available in the metric_memory_1 table, at 1 minute
//     intervals.
//
//
// WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
//
//  There are corresponding assembled and non-assembled publications.
//  If you change one and not the other, you might see strange results.
//  But it's possible you do want them to get out of sync, so we can't
//  simply import a common definition into both. CAVEAT EMPTOR
//
// WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
//
//!!BLOCK:PUBLICATION DESCRIPTION=END
//!!BLOCK:SQL:TABLENAME=memory_metrics_shortbusy
//!!BLOCK:HEADER=END

message memory_metrics_shortbusy_assembled { 
message aggregate_buffer {
   //!!SQL: SKIP; XML-MIB: SKIP; DOC: INCLUDE
   //!!BLOCK: FIELD DESCRIPTION: Logical Node identifier within the Instance
   required int32 node_id  = 1;

   //!!SQL: SKIP; XML-MIB: SKIP; DOC: INCLUDE
   //!!BLOCK: FIELD DESCRIPTION: Percent physical memory in use.  This is calculated as (MemTotal-MemFree)/MemTotal
   required int32 memory_percent_used   = 2;
 
   //!!SQL: SKIP; XML-MIB: SKIP; DOC: INCLUDE
   //!!BLOCK: FIELD DESCRIPTION: Percent swap in use.  This is calculated as (SwapTotal-SwapFree)/SwapTotal
   required int32 swap_percent_used   = 3;
 }

//!!SQL: SKIP; XML-MIB: SKIP; DOC: INCLUDE
 //!!BLOCK: FIELD DESCRIPTION: Informational Header for all messages
 required common.info_header header = 1;

//!!SQL: SKIP; XML-MIB: SKIP; DOC: INCLUDE
 //!!BLOCK: FIELD DESCRIPTION: Aggregated buffer, one entry for each node
 repeated aggregate_buffer aggregate = 2; 

}
