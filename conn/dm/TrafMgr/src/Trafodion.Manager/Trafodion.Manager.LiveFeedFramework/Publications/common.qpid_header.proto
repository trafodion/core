// @@@ START COPYRIGHT @@@
//
// (C) Copyright 2015 Hewlett-Packard Development Company, L.P.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
// @@@ END COPYRIGHT @@@

package common;

//
//  qpid_header 
//
//  This is the standard header that we use for all Qpid messages when using the
//  Google protocol buffers serialization method. This header identifies the sender
//  of the message, and is useful when debugging issues with, say, rogue senders.
//

message qpid_header
{
     required int64       generation_time_ts_utc = 1;   // time message was generated, in UTC, 
                                                        // microseconds since Jan. 1, 1970, 00:00
     required int64       generation_time_ts_lct = 2;   // time message was generated, in LCT, 
                                                        // microseconds since Jan. 1, 1970, 00:00
     required uint32      version      = 3;             // for alpha, this is always 1
     required uint32      cluster_id   = 4; 
     required uint32      domain_id    = 5;  
     required uint32      subdomain_id = 6; 
     required uint32      instance_id  = 7; 
     required uint32      tenant_id    = 8; 
     required uint32      component_id = 9;             // see SQEVL* defines in 
                                                        // ~/export/include/sqevlog/evl_sqlog_writer.h
     required int32       process_id    = 10;          // OS pid
     required uint32      thread_id     = 11;          // OS thread id
     optional uint32      node_id       = 12;          // virtual node id
     optional uint32      pnid_id       = 13;          // physical node id
     required string      ip_address_id = 14;          // ip address
     required uint32      sequence_num  = 15;          // producer-generated sequence number
     optional string      process_name  = 16;          // process name
     required uint32      host_id       = 17;          // host identifier
     optional string      system_version = 18;         // a string value of system version

}
