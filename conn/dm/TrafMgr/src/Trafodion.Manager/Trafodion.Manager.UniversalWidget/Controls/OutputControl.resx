<?xml version="1.0" encoding="utf-8"?>
<!-- @@@ START COPYRIGHT @@@                                                 -->
<!--                                                                         -->
<!-- (C) Copyright 2015 Hewlett-Packard Development Company, L.P.            -->
<!--                                                                         -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");         -->
<!-- you may not use this file except in compliance with the License.        -->
<!-- You may obtain a copy of the License at                                 -->
<!--                                                                         -->
<!--      http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.-->
<!-- See the License for the specific language governing permissions and     -->
<!-- limitations under the License.                                          -->
<!--                                                                         -->
<!-- @@@ END COPYRIGHT @@@                                                   -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TrafodionToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_theClearButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA3hJREFUOE9lk31M
        U1cYxg+Zso3JtlQqnWgIKwvTLSj/jIVIYDh1c5iU1vEPc4nbsqkpjEQyMWyLmjQmxGQ0E5UAG6RY6NYM
        RiuwolXKZ8untBZaPhpYgAstrfW2FNp7+3ipcZvuSU7y5iTP77zPe86JIs8rs/VwUgrvszcTX81MiHvp
        tSgSRSiXn7bP+/sdsw8bCM/fTn7PZ//nI3tVvJ3izupTNQ7U6F1oNixBdcuGJs1EpK7l9grr5rDreKeC
        pCl3PgtI/PV1oVinu9DiQsXN+/izdQDU4iP0GEy4e6cXKxSNtjYT5IphyLRupHyqM5DkWv4TyC7Vy9sz
        1L8UK5xQtC9hfGQC9kkrGCYMn88PmvYhzAIz03aMj1qhbF/AWaULgqzm3wj/6jbyAu/6oUMlD0JSuRlj
        JgueimXD/6lZsBxkEzptteNs5RiO/mhDNO+ahMS93aAQXVlBY/MoOrQ6GAxD8Hrpf8zPF/OOKahajBDL
        3diRqrpFEjI0jvyKZbidPgQ3NmAyjUOt1mGEa3edYcFQFAIrTix7aNhss9hYD8L9MADRTxQSDndRRHDw
        njtPNoWhASMCgbXIgS6XB3rDMNStephPSzH45Tdo1ugxYpmBl2Fgv1GJmrxCpBxQeUj8QZNbIrPB2N0L
        H/3o39yBAAYKi7FaXw9vTS2mir4FvbwM+89XMXf6DNDTgYb0XA/hp/fMfXWNgsfF5eYGFxkdZ2a6uuCq
        qsJqeTkwOAT/pUuw5uRg6cQJYKAP67WV+H7P5xSJfeu2qkDuhKZtELMzdoQ5AtPXi5DZzE2exaJSCadU
        CtTVIXjuHFBdDf8PpZBLyrBVqNcREqv9JEs6z5bXD+OBZRIhqxXBsTFwtxZRiFuTRUUIZGcDmyBRLvrf
        z0TaKUuA8CckhMT/9UrMniFlyc01dN+xwtqihW16KgLwc5EcjU1wHjuGsDAZIASIjYE3LQ2ypNxF0Ysf
        CZ+8Rr5RsP3AbLdMReOPtmHcvd0PatUHm7IJVEEBIBYDqckwHz2CvzdB776DjZwMplUo4CI8VaJFEPPe
        QtPJ8jWo73nRaaQwWnEDKP4CoY+zoD15HpJKBmLhRePC7jeCyBNBm5o68eyn2muJJkmLxwUfejQZX68v
        HfnO7ynNvuwp2V9G8T5wd5B94fykHdXxVTHRZWpBXF/pli3pjwHlH532KAJQYwAAAABJRU5ErkJggg==
</value>
  </data>
</root>