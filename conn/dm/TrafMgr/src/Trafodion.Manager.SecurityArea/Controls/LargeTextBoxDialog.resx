
<?xml version="1.0" encoding="utf-8"?>
<!-- @@@ START COPYRIGHT @@@                                                 -->
<!--                                                                         -->
<!-- (C) Copyright 2015 Hewlett-Packard Development Company, L.P.            -->
<!--                                                                         -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");         -->
<!-- you may not use this file except in compliance with the License.        -->
<!-- You may obtain a copy of the License at                                 -->
<!--                                                                         -->
<!--      http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.-->
<!-- See the License for the specific language governing permissions and     -->
<!-- limitations under the License.                                          -->
<!--                                                                         -->
<!-- @@@ END COPYRIGHT @@@                                                   -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEASEkAAAAAAAAcHAAAFgAAACgAAABIAAAAkgAAAAEACAAAAAAA9BcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////ANaHJQB/JQkAzLKeAJViSADrrF8A9969ALqDcgCsVA8AVBEAAIBGKQC8ekYA7seZAO3n
        4gDdlUYA28m6ALxpJwDbrIEAlD4BAJ9PLACidFwAwJuEAMmQXADxu3UAZScKAOXXzACLNhwAz4I9AHM4
        GQCYTxcArWw8AL1lEADbn1wAyXYbAPn07wDcvaUAsFofAN2SMQDs0LMAp2RSAN66jwBwGQMAxKeVAJBU
        NQDGdi4AzpdsAO/g0wCufmMAhjMBAJ9ICgDWpHMAn2E/AJVDKABzLQwAYBkAAKVOGACwb1sAvpJ3ANKm
        mQCDLBYArXJKAKxfNQDVwLAAlj0PAOTRwgD469wA455RAM6migCAPhwA2LOZAO60bAC6cDkAdCYCALJd
        FgB+NQ4AnGtRAIsyCwDThTEA1IpDAMSATADhrnYAuJR/AItOLgDjmjoA79vGAMBtGQC2Yx4A28OwAIxF
        IACxiXQAzHwnAJ1JIgDEimIA1rCRAOelWQCVUioAaSEBAOzh2QCdRRQAn2VJAF0NAADco2gAxXIkAPDr
        6QB7LQQAjjoJANG5pgB1JAoA3JI8AKVcRADMnoUArV4pAPz69wDHoYwAzX4yAMmsmQCGKgQArVYWAKRY
        GQCXWzoAvoJoAKp3XABZGQAAoVM0AK+CagDAbysA9O3mANqNKgDemVIA45xDAMt+OgDq3tIAbScGAIQs
        DQDVijwA7+XcAN3MwACPNQkAmEEGAL2KbACxbUQApXJWAIEzGwB6HgYAxJSEAKVNCwC5ZBkAeTYTAKBq
        SwCNOAAAtWEjANKAIADRgSoAp3tjAKBdMwBoKQ0AnkcEAL6UfQCsa1gAkDcOAOuqWQC6ej8AhUYkALiM
        dADk1McA3ce3ANW9qwDKqZIAlFc0ALxnHgDq18oAYR4CAN68nwDwuHEAjzwfAKpTHADkzL0Agy8GANCt
        nACfVBUAmUksALNeHAB1JwcAiTkOAOenXwDbk0sAZhwAANnEswCbQg8AjkUZAKFKFgDEbhMAmWA/AIlJ
        KACqWSYAynsrALJuTQDy6uIAgCYOAL+jkACoURIA2Yw0ALSHbgDLgkEAs4JoAOOfVgC7kHoAyHk0AFkU
        AABjEgAA58yxAG8gAADQtKIAmUIAAOSfSACqXBwA4ZpMAN+WPwDNex4Awpt7AL6JdADIdicAj08xAKpv
        UgD49fMAcSMHAHwgAgB/KQAAfisKAIkvBwCLNAcAxHEcANmPQQDShTcA7K9lAJlIDACXRxcA9fDrAOHQ
        wADbt6YAdi4LAH07GgCPUSsA4pc2AK9ZGQDAbSAA3su8AJg/EwCHQiAAom9RAOjazQBuJAIA2b+wAHoo
        CwCjSxEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPu7u5/7uGik6qqqvb2
        Z1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA18ohAQEj
        7u7u7gFEMjg4sHb19bZXqmdbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAANrqc972VQFxI+7ufyNi7UBAvWNjY784drZXqmcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABtTsRnEap2LgFxIyPuf38BPeagoKCgoEBAY2M4sLaq6AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbU7EZxFXtnb/wyMBcSPuf39xa+Tm5udNTU1NoKBAY7849apn
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANfKxGeqV/V2yf8yliQBcSMjf8buf1kD5bKy
        srLmTU1NoEC9Yzi2qlsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgk7e9le2dsn//72LdT0B
        ASMjf8bGAc3U/uX+5eXlhrKyTU2gQL2/drb2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaTt72
        k/XJ/zIyixOWMbjGAXEjf8YO4feFSbe3t7f+/uXlhrLmTaBAYzi2qgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANqZ3va2dsn/MosTlpYxsklyAXEjf8aIxuFTu/z8/Py3t7f+/uWGsuZNoL2/9aoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACh2pnoqrZ2yf8yixOWMTGyaUmpAQEj7saIiHEWN2FhYWFh/Pzit/7+5Yay
        TaBAY3ZXWwAAAAAAAAAAAAAAAAAAAAAAAAAAAKFtW+iTSnbJkjLWE5YxMbJpaUlJpQFx7n+IYu6Ehbus
        YWFhYWFh/OJs/v7lsk1NQGOwV94AAAAAAAAAAAAAAAAAAAAAAAAAACbbVpNKdsmSndYTljExsmlpt7e7
        zQFx7n/GYohxBdGsrKysrKxhYWH84mz+5YbmTUBjsFcAAAAAAAAAAAAAAAAAAAAAAAAAJttWk0p2yZKd
        1paWMTGyaWlpt0lhRXEBI3/GYmLhBNE3Nzc3N6ysrGFhYeJs/uWG5k1AY3aqAAAAAAAAAAAAAAAAAAAA
        AAAm2+iTSnbJkp0TlpYxMbKyaWlpSUlJYacBI+7GiGIOxh17rDc3Nzc3N6ysYWHibLflhuZNQL/1qgAA
        AAAAAAAAAAAAAAAAAPSY6JNKdsmSnROWljExsmlpaWlJSUlJu5UBce5/iGJicZoKrDc3Nzc3NzesrGFh
        /Gy35bLmoEC/tmcAAAAAAAAAAAAAAAAAAAIiVkr1yZKdE5aWMTGyaWlpaUlJSUn8YfF/ASN/xmKE7hCs
        Nzc3Nzc3Nzc3rKxhYfxs/uWyTaC9OFcAAAAAAAAAAAAAAAAAgCJWk0oJkp0TlpYxMbJpaWlpSUlJSfz8
        /LtyAXF/xoiEiOEL0Tc3Nzc3Nzc3N6ysYWH8bP7lsk2gY/WqAAAAAAAAAAAAAAD0mOiTSgmSndaWljEx
        smlpaUlJSUlJ/Pz8/LupAXEjf8ZiYnFSCjc3e3t7e3s3Nzesu2Fh/Lf+5eZNQL+2ZwAAAAAAAAAAAAAC
        IpNKCZKdE5aWMTGyaWlJ1NTUYbu7Yfz8/GGFhAEjf8aIiO5iC5ycGRkZrKx7CgrRN2FhYeK35bLnoGOw
        qgAAAAAAAAAAAPTbVle22He0Hh5qsrJpaUvzqal4eMHBo2H8/Pw3zwFx7n/GiIju7oiIiIhiYhqJa1IF
        nNG7Yfy3t+Wy50C/tmcAAAAAAAAAAALAKX9/f3/uI3G8aWlpSTQBAQEBAQEBf5Rh/GG7wgEBI39/xoiI
        f+4jIyMjIyNxcQEBxhXRu2H8t/6y56C9sKoAAAAAAAAA9NsgMwEBcSMjf+5xYElpSUvGAXEjIyMjAY43
        YWFhYaUBce5/xoiIiIjGxsbGiIjGxsZ/4QFM0WFh4rflsudAv7beAAAAAAAAgCKTfiMBI3/GiIhxOtRp
        SbuoAXF/f4iIcaesYWFhN6QBce5/xoiIhIQvL4T7iMbGxoiIiCNinDdh/Lf+suegY3aqAAAAAAAAmOiT
        CdMBI3/GiC9/pWlJSbs0AXHuxoiExn9Fu2Fhu8IBASN/xsaIxqWUNjY28qsjf8aIhIgBFdFhYeK35bKK
        QDi2AAAAAAAm21ZKkhcBcX/GiISII6nUSfzxxgEjxoiEhHEwN2FhYWHvASN/xsaIxiOjN7u70aQBI3+I
        YmIjEDe7Yfxs/rLnoGP1ZwAAAACAIpNKCdgjAX/GiISEcRa7/Py7qAFxf4iEhO68YWFhYTcwAXF/xsaI
        iHGeN2FhN6MjIyPGiISIIwvRYWHit+XmoL2wqgAAAAAC6JNKydatASPGiISExoTx1Py7wQFxf4iE+2Lu
        o7thYbvycQEjf8aIYn/7hWFhYaxYcSN/iGJicVoKrGH8t+Wy50A4VwAAAFTbVkp2khMMAXHGiIT7hHHB
        u/xhNsYBI4gv+4RxyzdhYWE3awEjf4iIYohxwTdhYTd6ASN/iISE7omsN2Fh4v6y56C/tsQAACbbVkoJ
        ktbsxgF/iIT7+yOou/z8N3IBI4iEhPvGiWFhYWE3ZAFxf4iIhIRxdDdhYbvyxiN/iISEYiML0WFh4rfl
        5qBj9WcAAIAik0oJMtYxXgHuiIQapWJilGH8u3gBccaEhKWEI1M3YWG7NsYB7ohihISIiJRhYWE31XHu
        xoT7hHFaCqxh/LflsqC9dvYAAAIik0rJMtYxHwEjiISlpaUj+rv8YTaIAX+E+6WlI883YWFhN3IBI4iE
        hISEcY43YWE3ZHHuxoQaGn+JrDdh/Lflsk1AOKoAAALok0rJMhOWaohxxoSl7+/Ga2H8YTdyAX+E+6Xv
        YqWFYWFhNywBccaEhPsa7qesYWG7NmIjf4QapYTuCzdh/LflsudAOKoAAJhWk/XJnROW5G8Bf4Sl7xCl
        DkW7YTepASNiGqX3738sN2FhYYUaAcaE+xqlhH9Fu2FhN3Jxf2KlpaUjWtFh/Lflsk1AOKoAAJhWtnaS
        nROW5Jtx7oSl97wQfzA3YWGFhHGIGu/3EIgWN2FhYTekAX+E+6WlpSN9N2FhN3hxf4il7++IEKxh/Lfl
        sk1Av5MAAJhWtnaSnROWMbKrcYil97y8hLxhYWE3FgHGGu8QvKWlNmFhYbujcSOEpaXv74gQYWFhYYWl
        I4il7/elfws3/LflsudA/5MAAJhWtnaSnROWMUk6Acal97w/EIjCu2E3LAF/+/emvLzGwTdhYWG7pnGI
        pe/396V/wrthYTfPcYj797wQf303/LflsudAv6oAAJhWtnaSnROWMeRgcX/797ynP4ikN2FhhftxhPe8
        Pz+EcjdhYWE3egGIpff3vBB/pDdhYbvCI4iE97y8hD9h/LflsudAOKoAAJhWk3aSnROWMWm3sXGE9z+n
        a+/3hWFhN54BhO+8p2sQpTa7YWG7lO7Gpfe8vLz774VhYWFh93+E77ynEGKjYbflsudAOKoAAJjok3aS
        nROWMWnUzQFi9z9ra6eILDdhu1NxiO+8p2triGQ3YWFhN9Vx+/e8P6cQxiy7Yfw3MHH77z9rp4gwu7fl
        5oq9dvYAAALok/XJnRMxMWlJ+SN/pbxra2v7FjdhYWGlI6W8p2trpag3YWFhN2QBhPf9p6eniBY3/Py7
        RSOEpbxra6Vr/Ley52pj9egAAAIik/XJMhMxsmm31KdxhKZr1QS8pTZhYTekAYSmp2sEP6WUu2FhYTaI
        iPf9p2tr76U2Yfxhu/1/77xraz+l+Umy50C/tmcAAIAik/XJMhMxsmm3u+ABxu+nawTVhJU3YbujcYjv
        p2sEBIT6N2FhYTdyce9Yp2trp4jBu/z8N44BQaZrBNUaekmy50D/k1sAACYiVkrJMhOWMWm3/EvucYS8
        awQE73S7YWFhQXFBvGsEBPd0rGFhYTffAftYp2vVa/tyu/z8YZTuxqanBHS8qGnnar12qpkAAF+ZVkrJ
        MhOWMWlpt7t0AcbvawR0a6Xyu2E3zQH7vGsEdGul8rthYWFhGnFYa2sEBLyllGH8/LuzAbGnBHQEpr7n
        QGP19soAAABDc/a2yYuWMbJpt2F4AXH7pwR0dKV6N2G7RXEj92sEdHTvjjdhYWE3ywGEawQEBNWElbv8
        /Ls0AcanBCsrED0xQP+26AAAAADrD3MtEbbJvUBqTbLlYgEj9wQryKdrYWFhu/0BI2KlvARrcmFhYWG7
        RXEBiP10dHTvdGH8/GHxiAHGvHTIa9yWvcmq6gAAAABHQ4dzLRGXsL9jQKDkbwEBcYjvP3T3wtK7ZWQB
        AQEBce4aBDZhYWFhu/0BAXGI7z9rpfI3u7vRngEBccalP6i/9REcXwAAAAAAX+lzLRGXsDhj+KDmfAEB
        AQEBcYlrs5+fKAiEcQEBcXFxhI/ibGxsKjkBcQEBAQGI92vPOjrPa7zuAXEj4feXEdC6AAAAAAAA6w/q
        LX4RJThjY0Cg5kEBAQFx4SMaEO/vpaW87gFxcSMjpTzHx8fHAxt/AXFxcXEBxhrv94mJP7wjcSN/4Ua2
        fhzOAAAAAAAAR0OHcy0Rl7A4Y/igdXkBAQEBce7u7u4jI3FxcXFxI39xkZDHx8fHx5A7AXFxcXFxAXEj
        IyMjI3FxI+7uhEgR0E+5AAAAAAAAAAYP6i1+ESWwv2NATVwjAQEBcSN/7iNxcXFxIyMj7uGmGwPHx8fH
        x5BuAXFxcXFxcXFxcXFxceHh4e7vDLZ+g4EAAAAAAAAAAEdDh3MtEZclOGP4QObwAQEBcSN/f38j4e5/
        xsaEpt0bkMfHx8fHx8eGsXEjIyPuf3/GiIhihIRBRl2XthHQT7kAAAAAAAAAAAAGD+otfhGXsDhj+ObF
        AQEBcSN/xu5ytbW1tTWvhpADx8fHx8eGhoYDG3wUFBQUFBRcXFxcXFw4/zglEX4cgQAAAAAAAAAAAABH
        zulzLX6XJbC/Y0D4iAEBAXHuxn/P4wMDAwMDx4aGhoaGhoaGhoaGhgN1subm5k1NTU2gQGO/sCWXftBP
        uQAAAAAAAAAAAAAA69mHcy0RlyU4v2OKbwEBAXHuxn8Qr4aGhoaGhoaGhoaGhoaGhoZNTU1NoKCgoKCg
        oED4YziwJZcRLRzOAAAAAAAAAAAAAAAAAF8P6i1+EZclOL9APnEBAXEjxsYO4HVNTYaGhoaGhoaGhoZN
        TU1NTaCgoKBAQEBAQPhjv7AllxF+g7oAAAAAAAAAAAAAAAAAAEfO6XMtfhGXJTi/vbEBAQHhf4h/dE1N
        TU1NTU1NTU1NTU1NTU2goKBAQPhjY2NjY2M4sCWXEX7QT7kAAAAAAAAAAAAAAAAAAABHQ+lzLX4RlyWw
        vV0BAQFx7g6IGhTmoKBNTU1NTU1NTaCgoKCgQED4Y2NjY7+/ODiwJZcRftBPzgAAAAAAAAAAAAAAAAAA
        AAAA69mHcy1+EZclOMPuAQFxI8Zif4yKoKCgoKCgoKCgoKCgQED4Y2Njvzg4OLCwsCUllxF+0BzOAAAA
        AAAAAAAAAAAAAAAAAAAAAAbZh3MtfhGXJcmtAQEBcX9ixrxjQPhAQEBAQEBAQPj4Y2NjY784OLCwJSW2
        l5cREX7QHIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAG2YdzLX5+EfVQAQEBce4OYg6NvWNjY2NjY2NjY2Nj
        Y784ODiwsCW2lxEREX5+LXNPQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtnp6tAtfhGXLwEBASPGYmhE
        Yzg4v7+/v7+/ODg4ODiwsCUll5cREX5+LS3QHOnOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOtD6epz
        LS2qEgEBAXHuiA4acDiwsDg4ODg4sLCwsCUltpcRERF+LS0tc3OHul8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABHXw+Hc3PezHEBAXEjDmJoXXYlJSUlJSUlJSW2l5eXERF+fi0tLXNzh+lD6wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAArrnZ6Ydz3icBAQHhxmJoWLaXl5eXl5eXlxERERF+fn4tLS1zc4fp
        2V9HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjrX9npc2YBAQFx7g5iDlARERERERERfn5+
        fi0tLS1zc+qH6Q/O6xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgbOD+lCAQEBIw5i
        aF5nLS0tLS0tLS0tLS1zc3Pqh+kPQwauAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACuBkMNAQEBcWhiDvuDxHNzc3Nzc3Nzc+rqh+kP2V8GrgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAK6ucQEBce4OYmgzmerq6urq6oeH6ekP2UOh664AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwEBcSPGYg6x6Q8PDw8PD9lDQ18G664YAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACN/iGIOUaEGBgYGButH
        rhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////+//////AAAA////8AAP
        ////AAAA////AAAA////AAAA///8AAAAP///AAAA///wAAAAD///AAAA///AAAAAA///AAAA//8AAAAA
        AP//AAAA//4AAAAAAH//AAAA//wAAAAAAD//AAAA//gAAAAAAB//AAAA/+AAAAAAAAf/AAAA/8AAAAAA
        AAP/AAAA/8AAAAAAAAP/AAAA/4AAAAAAAAH/AAAA/wAAAAAAAAD/AAAA/gAAAAAAAAB/AAAA/gAAAAAA
        AAB/AAAA/AAAAAAAAAA/AAAA+AAAAAAAAAAfAAAA+AAAAAAAAAAfAAAA8AAAAAAAAAAPAAAA8AAAAAAA
        AAAPAAAA4AAAAAAAAAAHAAAA4AAAAAAAAAAHAAAA4AAAAAAAAAAHAAAAwAAAAAAAAAADAAAAwAAAAAAA
        AAADAAAAwAAAAAAAAAADAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAA
        AAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAA
        AAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAA
        AAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAgAAAAAAAAAABAAAAwAAAAAAAAAADAAAAwAAAAAAA
        AAADAAAAwAAAAAAAAAADAAAA4AAAAAAAAAAHAAAA4AAAAAAAAAAHAAAA4AAAAAAAAAAHAAAA8AAAAAAA
        AAAPAAAA8AAAAAAAAAAPAAAA+AAAAAAAAAAfAAAA+AAAAAAAAAAfAAAA/AAAAAAAAAA/AAAA/gAAAAAA
        AAB/AAAA/gAAAAAAAAB/AAAA/wAAAAAAAAD/AAAA/4AAAAAAAAH/AAAA/8AAAAAAAAP/AAAA/+AAAAAA
        AAf/AAAA//AAAAAAAA//AAAA//gAAAAAAB//AAAA//wAAAAAAD//AAAA//4AAAAAAH//AAAA//8AAAAA
        AP//AAAA///AAAAAA///AAAA///wAAAAD///AAAA///8AAAAP///AAAA////AAAA////AAAA////8AAP
        ////AAAA////////////AAAA
</value>
  </data>
</root>