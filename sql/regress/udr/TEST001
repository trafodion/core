-- @@@ START COPYRIGHT @@@
--
-- (C) Copyright 2000-2014 Hewlett-Packard Development Company, L.P.
--
--  Licensed under the Apache License, Version 2.0 (the "License");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an "AS IS" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.
--
-- @@@ END COPYRIGHT @@@

set pattern $$QUOTE$$ '''';
control query default ALLOW_UDF 'ON';

obey TEST001(clean_up);
log LOG001 clear;
sh rm -f LOG001-SECONDARY;
obey TEST001(compile_libs);
obey TEST001(create_tables);
obey TEST001(register_functions);
obey TEST001(tests);
log;
obey TEST001(clean_up);
exit;

?section clean_up
--------------------------------------------------------------------------
drop table clicks;
drop table_mapping function sessionize;
drop library TEST001;

?section compile_libs
--------------------------------------------------------------------------
log;
#ifNT
sh rm -f ./TEST001.dll;
sh sh $$scriptsdir$$/tools/dll-compile.ksh TEST001.c
  2>&1 | tee LOG001-SECONDARY;
set pattern $$DLL$$ TEST001.dll;
#ifNT
#ifNSK
sh rm -f ./TEST001.so;
sh $$scriptsdir$$/tools/dll-compile.ksh TEST001.c
  "-I$mxcidir -I/usr/tandem/sqlmx/include" "-lib zrlddll"
   2>&1 | tee LOG001-SECONDARY;
set pattern $$DLL$$ TEST001.so;
#ifNSK
log LOG001;

?section create_tables
--------------------------------------------------------------------------
create table clicks (userid char(32), ts TIME(6), ipAddr char(15)) ;
insert into clicks values
 ('super-user',cast(time'09:59:59.50 pm' as TIME(6)),'12.345.567.345'),
 ('super-user',cast(time'11:59:59.50 pm' as TIME(6)),'12.345.567.345'),
 ('super-services',cast(time'11:59:59.50 pm' as TIME(6)),'12.345.567.345');

?section register_functions
--------------------------------------------------------------------------

create library TEST001 file $$QUOTE$$ $$REGRRUNDIR$$/$$DLL$$ $$QUOTE$$;
create table_mapping function sessionize(colname char(10), timeintval int)
returns (userid char(32), ts largeint, session_id largeint)
external name 'SESSIONIZE'
library TEST001;

?section tests
--------------------------------------------------------------------------
--cqd attempt_esp_parallelism 'off' ;

get table_mapping functions for library TEST001 ;

SELECT cast(CONVERTTIMESTAMP(ts) as TIME(6)), userid, session_id
FROM UDF(sessionize
(TABLE(SELECT userid, JULIANTIMESTAMP(ts) as TS
       FROM clicks
       PARTITION BY userid ORDER BY ts),
cast('TS' as char(2)),
60000000)) XO(userid,ts,session_id);
